"""
Given an array of integers, find the one that appears an odd number of times.

There will always be only one integer that appears an odd number of times.

Examples
[7] should return 7, because it occurs 1 time (which is odd).
[0] should return 0, because it occurs 1 time (which is odd).
[1,1,2] should return 2, because it occurs 1 time (which is odd).
[0,1,0,1,0] should return 0, because it occurs 3 times (which is odd).
[1,2,2,3,3,3,4,3,3,3,2,2,1] should return 4, because it appears 1 time (which is odd).

"""

def find_it(seq):
    for num in seq:
        if (seq.count(num)) % 2 == 1:
            return num


"""

def find_it1(seq):
    set_of_list = set(seq)
    
    for element in set_of_list:
        if seq.count(element) % 2 == 1:
            return element
            
"""
"""

import collections

def find_it(seq):
    count = collections.Counter()

    for element in seq:
        count[element] += 1

    listt  = list(count.items())

    for each in listt:
        if each[1] % 2 == 1:
            return each[0]
            
""""
